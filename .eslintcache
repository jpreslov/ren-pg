[{"/home/jweb_jlovett/Desktop/source/ren-pg/src/index.js":"1","/home/jweb_jlovett/Desktop/source/ren-pg/src/App.js":"2","/home/jweb_jlovett/Desktop/source/ren-pg/src/lib/commerce.js":"3","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/index.js":"4","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/Products.jsx":"5","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/Product.jsx":"6","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/ProductDetails.jsx":"7","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/navbar/Navbar.jsx":"8","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/Cart.jsx":"9","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/info/Info.jsx":"10","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/checkout/Checkout.jsx":"11","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/info/styles.js":"12","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/styles.js":"13","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/cartitem/CartItem.jsx":"14","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/PaymentForm.jsx":"15","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/cartitem/styles.js":"16","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/Review.jsx":"17","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/navbar/styles.js":"18","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/checkout/styles.js":"19","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/productDetailsStyles.js":"20","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/productStyles.js":"21","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/productsStyles.js":"22","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/AddressForm.jsx":"23","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/FormInput.jsx":"24"},{"size":142,"mtime":1635875578607,"results":"25","hashOfConfig":"26"},{"size":3021,"mtime":1635875578599,"results":"27","hashOfConfig":"26"},{"size":126,"mtime":1635875578607,"results":"28","hashOfConfig":"26"},{"size":419,"mtime":1635875578607,"results":"29","hashOfConfig":"26"},{"size":830,"mtime":1635875578607,"results":"30","hashOfConfig":"26"},{"size":1320,"mtime":1635875578607,"results":"31","hashOfConfig":"26"},{"size":4143,"mtime":1635875578607,"results":"32","hashOfConfig":"26"},{"size":1822,"mtime":1635875578607,"results":"33","hashOfConfig":"26"},{"size":1914,"mtime":1635875578607,"results":"34","hashOfConfig":"26"},{"size":1606,"mtime":1635875578607,"results":"35","hashOfConfig":"26"},{"size":3420,"mtime":1635879953621,"results":"36","hashOfConfig":"26"},{"size":489,"mtime":1635875578607,"results":"37","hashOfConfig":"26"},{"size":1282,"mtime":1635875578607,"results":"38","hashOfConfig":"26"},{"size":1583,"mtime":1635875578607,"results":"39","hashOfConfig":"26"},{"size":3249,"mtime":1635875578607,"results":"40","hashOfConfig":"26"},{"size":3726,"mtime":1635875578607,"results":"41","hashOfConfig":"26"},{"size":960,"mtime":1635875578607,"results":"42","hashOfConfig":"26"},{"size":1193,"mtime":1635875578607,"results":"43","hashOfConfig":"26"},{"size":1210,"mtime":1635875578607,"results":"44","hashOfConfig":"26"},{"size":1831,"mtime":1635875578607,"results":"45","hashOfConfig":"26"},{"size":1367,"mtime":1635875578607,"results":"46","hashOfConfig":"26"},{"size":539,"mtime":1635875578607,"results":"47","hashOfConfig":"26"},{"size":6011,"mtime":1635883595497,"results":"48","hashOfConfig":"26"},{"size":451,"mtime":1635875578607,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"38jsou",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/jweb_jlovett/Desktop/source/ren-pg/src/index.js",[],["104","105"],"/home/jweb_jlovett/Desktop/source/ren-pg/src/App.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/lib/commerce.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/index.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/Products.jsx",["106"],"import React from 'react';\nimport { Grid } from '@material-ui/core';\n// import { Grid, Card, CardMedia, CardContent, CardActions, Typography } from '@material-ui/core';\nimport { Product } from '../index';\nimport { Link } from 'react-router-dom';\n\n// import Product from './product/Product';\nimport useStyles from './productsStyles';\n\nconst Products = ({ products, onAddToCart }) => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.content}>\n      {/* <div className={classes.toolbar} /> */}\n      <Grid className={classes.grid} container justify=\"center\" spacing={6} xs={12} sm={6} md={10} lg={12} item={true}>\n        {products.map((product, key) => (\n          <Product key={key} permalink={product.permalink} product={product} />\n        ))}\n      </Grid>\n    </main>\n  );\n};\n\nexport default Products;\n","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/Product.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/ProductDetails.jsx",["107","108","109"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Card, CardMedia, CardContent, CardActions, Typography, Button, ButtonBase, Select, MenuItem, InputLabel } from '@material-ui/core';\nimport { commerce } from '../../../lib/commerce';\n\n// import { AddShoppingCart } from '@material-ui/icons';\n\nimport useStyles from './productDetailsStyles';\nimport Carousel from 'react-material-ui-carousel';\n\nconst ProductDetails = ({ onAddToCart }) => {\n  const [product, setProduct] = useState({});\n  const [size, setSize] = useState(' ');\n  const [variantGroupInfo, setVariantGroupInfo] = useState({ id: ' ', name: ' ' });\n  const [optionInfo, setOptionInfo] = useState({ id: ' ', name: ' ' });\n  const [disabled, toggleDisabled] = useState(true);\n  const classes = useStyles();\n  const { permalink } = useParams();\n\n  const handleAddToCart = () => onAddToCart(product.id, 1, variantGroupInfo, optionInfo);\n\n  const fetchProduct = async () => {\n    const product = await commerce.products.retrieve(`${permalink}`, {type: 'permalink'});\n    setProduct(product);\n  };\n\n  const multiplePics = () => (\n    <Carousel className={classes.carousel} autoPlay={false} animation=\"slide\">\n      {product.assets.map((asset, id) => (\n        <CardMedia key={id} className={classes.carouselPics} image={asset.url} title={product.name} />\n      ))}\n    </Carousel>\n  );\n\n  const singlePic = () => <img className={classes.media} src={product.media?.source} title={product.name} alt={product.name} />;\n\n  const switchDisabled = () => {\n    toggleDisabled(false);\n  };\n\n  const pickSizeToggleButton = (e) => {\n    setSize(e.target.value);\n    switchDisabled();\n  };\n\n  useEffect(() => {\n    fetchProduct();\n  }, []);\n\n  return (\n    <>\n      <main className={classes.content}>\n        <Grid className={classes.grid} item={true}>\n          <Card className={classes.root}>\n            {product.assets?.length > 1 ? multiplePics() : singlePic()}\n            <CardContent>\n              <div className={classes.cardContent}>\n                <Typography className={classes.text} gutterBottom>\n                  {product.name}\n                </Typography>\n                <Typography className={classes.text} gutterBottom>\n                  ${product.price?.formatted}\n                </Typography>\n                <Typography dangerouslySetInnerHTML={{ __html: product.description }} color=\"textSecondary\" />\n              </div>\n              <CardActions className={classes.cardActions}>\n                <div className={classes.productInfo}>\n                  {product.variant_groups?.map((variant_group, index) => (\n                    <div className={classes.inputDiv} key={index}>\n                      <InputLabel>{variant_group.name}</InputLabel>\n                      <Select\n                        label={variant_group.name}\n                        defaultValue={\" \"}\n                        onChange={(e) => {\n                          pickSizeToggleButton(e);\n                        }}\n                        onClose={() => setVariantGroupInfo({ id: variant_group.id, name: variant_group.name })}\n                      >\n                        {variant_group.options.map((option, index) => (\n                          <MenuItem\n                            key={index}\n                            onClick={() => {\n                              setOptionInfo({ id: option.id, name: option.name });\n                            }}\n                            value={option.name}\n                            defaultValue=\"Select option\"\n                          >\n                            {option.name}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </div>\n                  ))}\n                </div>\n                <Button disabled={disabled} className={classes.button} aria-label=\"Add to Cart\" onClick={handleAddToCart}>\n                  Add to Cart\n                </Button>\n              </CardActions>\n            </CardContent>\n          </Card>\n        </Grid>\n      </main>\n    </>\n  );\n};\n\nexport default ProductDetails;\n","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/navbar/Navbar.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/Cart.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/info/Info.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/checkout/Checkout.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/info/styles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/styles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/cartitem/CartItem.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/PaymentForm.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/cart/cartitem/styles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/Review.jsx",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/navbar/styles.js",["110","111"],"import { makeStyles, fade } from '@material-ui/core/styles';\n\nconst drawerWidth = 0;\n\nexport default makeStyles((theme) => ({\n  // toolBar: {\n  //   justifySelf: 'center'\n  // },\n  appBar: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n    boxShadow: 'none',\n  },\n  title: {\n    flexGrow: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    textDecoration: 'none',\n  },\n  image: {\n    padding: '3vh',\n    width: `50%`,\n    opacity: '0.8',\n    [theme.breakpoints.down('sm')]: {\n      width: `80%`,\n      height: `10%`,\n    },\n    [theme.breakpoints.between('sm', 'xl')]: {\n      width: `50%`,\n      height: `10%`,\n    },\n  },\n  buttonGroup: {\n    textDecoration: 'none',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  button: {\n    fontWeight: '600',\n    textTransform: 'capitalize',\n    [theme.breakpoints.down('sm')]: {\n      width: '20vw',\n      fontSize: 14,\n    },\n    [theme.breakpoints.between('md', 'xl')]: {\n      fontSize: 18,\n    },\n  },\n  badge: {\n    left: '1vw',\n    color: 'primary',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '2.5vw',\n    },\n    [theme.breakpoints.between('md', 'xl')]: {\n      marginLeft: '0.2vw',\n    },\n  },\n}));\n",["112","113"],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/checkout/styles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/productDetailsStyles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/product/productStyles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/products/productsStyles.js",[],"/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/AddressForm.jsx",["114","115","116","117","118","119","120","121"],"import React, { useState, useEffect } from \"react\";\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography, TextField } from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { commerce } from \"../../lib/commerce\";\nimport FormInput from \"./FormInput\";\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const [invalidEmail, setInvalidEmail] = useState(false);\n  const [emailInfo, setEmailInfo] = useState();\n  const [email, setEmail] = useState(\"\");\n  // const { control } = useFormContext();\n\n  const methods = useForm();\n\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const options = shippingOptions.map((sO) => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted.formattedWithSymbol})`,\n  }));\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(countries[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    fetchShippingOptions(checkoutToken.id, shippingCountry);\n  }, []);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  useEffect(async () => {\n    let data = await fetch(\n      `https://emailvalidation.abstractapi.com/v1/?api_key=c5582c2eafff48f7a75816d0358f7b56&email=${email}`\n    );\n    setEmailInfo(data);\n  });\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address\" />\n            <Grid item xs={12} sm={6}>\n              <TextField\n                defaultValue=\"\"\n                fullWidth\n                size=\"small\"\n                name=\"email\"\n                label=\"Email\"\n                required\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {/* <Controller as={TextField} defaultValue=\"\" fullWidth size=\"small\" name=\"email\" label=\"Email\" required onChange={(e) => validateEmail(e)} /> */}\n            </Grid>\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"ZIP code\" />\n            <Grid item sx={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                name=\"country\"\n                defaultValue=\"\"\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => (\n                  <MenuItem key={country.id} value={country.id}>\n                    {country.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item sx={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {subdivisions.map((subdivision) => (\n                  <MenuItem defaultValue=\"\" key={subdivision.id} value={subdivision.id}>\n                    {subdivision.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            {/* <Grid item sx={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {options.map((option) => (\n                  <MenuItem defaultValue=\"Select an option\" key={option.id} value={option.id}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid> */}\n          </Grid>\n          <br />\n          <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\n              Back to Cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={invalidEmail}>\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","/home/jweb_jlovett/Desktop/source/ren-pg/src/components/checkoutform/FormInput.jsx",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":5,"column":10,"nodeType":"128","messageId":"129","endLine":5,"endColumn":14},{"ruleId":"126","severity":1,"message":"130","line":3,"column":79,"nodeType":"128","messageId":"129","endLine":3,"endColumn":89},{"ruleId":"126","severity":1,"message":"131","line":13,"column":10,"nodeType":"128","messageId":"129","endLine":13,"endColumn":14},{"ruleId":"132","severity":1,"message":"133","line":48,"column":6,"nodeType":"134","endLine":48,"endColumn":8,"suggestions":"135"},{"ruleId":"126","severity":1,"message":"136","line":1,"column":22,"nodeType":"128","messageId":"129","endLine":1,"endColumn":26},{"ruleId":"126","severity":1,"message":"137","line":3,"column":7,"nodeType":"128","messageId":"129","endLine":3,"endColumn":18},{"ruleId":"122","replacedBy":"138"},{"ruleId":"124","replacedBy":"139"},{"ruleId":"126","severity":1,"message":"140","line":15,"column":24,"nodeType":"128","messageId":"129","endLine":15,"endColumn":39},{"ruleId":"126","severity":1,"message":"141","line":16,"column":10,"nodeType":"128","messageId":"129","endLine":16,"endColumn":19},{"ruleId":"126","severity":1,"message":"142","line":30,"column":9,"nodeType":"128","messageId":"129","endLine":30,"endColumn":16},{"ruleId":"132","severity":1,"message":"143","line":58,"column":6,"nodeType":"134","endLine":58,"endColumn":8,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"145","line":66,"column":6,"nodeType":"134","endLine":66,"endColumn":8,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"145","line":70,"column":6,"nodeType":"134","endLine":70,"endColumn":27,"suggestions":"147"},{"ruleId":"132","severity":1,"message":"148","line":72,"column":3,"nodeType":"128","endLine":72,"endColumn":12,"suggestions":"149"},{"ruleId":"132","severity":1,"message":"150","line":72,"column":13,"nodeType":"151","endLine":77,"endColumn":4},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ButtonBase' is defined but never used.","'size' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'fade' is defined but never used.","'drawerWidth' is assigned a value but never used.",["152"],["153"],"'setInvalidEmail' is assigned a value but never used.","'emailInfo' is assigned a value but never used.","'options' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["156"],["157"],"React Hook useEffect contains a call to 'setEmailInfo'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [email] as a second argument to the useEffect Hook.",["158"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [fetchProduct]",{"range":"169","text":"170"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"171","text":"172"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry]",{"range":"173","text":"174"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"175","text":"176"},"Add dependencies array: [email]",{"range":"177","text":"178"},[1741,1743],"[fetchProduct]",[2242,2244],"[checkoutToken.id]",[2441,2443],"[checkoutToken.id, shippingCountry]",[2579,2600],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[2800,2800],", [email]"]